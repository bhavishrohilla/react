1-----Stateless funtional component------
JAVASCRIPT FUNCTIONS


function Welcome(props) {
    return <h1>Hello,{props.name}</h1>
}



2.-----Statefull Class component------------

Class extending Component Class
Render method using HTML



class Welcome extends React.Component {
    render() {
        return <h1>Hello, {this.props.name}</h1>
    }
}

** default export will export the function irrespective of the name of the function
** property are assigned in the constructor() method
** super() refers to thr parent class.
        by calling super() method in the constructor() method, we call the parent's constructor()
        method and get access to the parent properties and methods********************

FUNCTIONAL-----------
*Simple functions
*Use Function components as much as possible
*Absence of this keyword
*Solution withouit using state 
*Mainly responsible for UI
*Stateless/Dumb/Presentational



CLASS---------
*More feature rich
*mainatain their own private data-state
*Complex UIprovide lifecycle hooks
*Statefull/Smart/Conatiner


----- JSX -----
*its an extension to JAVASCRIPT language syntax.
*Write XML-like codes for elements and components.
*JSX tags have  tagname, attributes and children.
*JSX is not a necessity to write react applications.
*JSX makes yoyr code simpler and elegant.
*JSX transpiles to pure JAVASCRIPT which is understood by the browsers.



---props vs state----
*props get passed to the component----managed with the component
*function parameters-----variables declared in the functin body
*props are immutable----state can be changed
*props-functional components------useState Hook-functional component
*this.props-class component-----this.state-class components

------   setState   --------
*always use the setState method and never modify the state directly
*code has been excuted after the state has been updated? Place the code in the callback function which is the 
 second aruguement to the setState method
*When you have to update state based on the previos state value, pass in a function as an aruguement instead of the
 regular object 

 ------EVENT BINDING -----------methods
 *binding in render method
 *arrow function in render
 *binding in the class constructor
 *class property as arrow functions
 *a method can be called by arrow functions in JSX along with a parameter

 ------------TERNARY CONDITIOINAL OPERATOR APPROACH
 state ?(true) : (false)

 ---------SHORT CIRCUIT
state && true
if the state is false, nothing is returned 

***MAP method id a javascript code which needs to be evaluated
**Each child in a list should have a unique "key" prop.
**"key" prop is used by React to make lists more efficient. It specifies the elements which are present inside the list 
        through "key" prop.(So key prop is reserved already in REACT)

--------LISTS AND KEYS--------------
a key is a special string attribute yoou need to include when creating lists of attributes.
keys give the elements a stable identity
keys  help React identify items are changed, are removed or are added
help is efficient update of the user interface.
